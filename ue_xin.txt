Task 1.1: Definition Distributed Systems

A distributed system is a set of computers and their communication network. For a specific work, every computer could finish a part of the work and communicate the intermediate results to each other, all the computers could collaborative finish the whole work. From the aspect outside the distributed system, the system is inseparable and can't be known that which part is finished by which computer.

Basic Problems:
1. Lack of Global State
2. Lack of Common Clock
3. Indeterministic Behavior

Requirements:
1. Heterogeneity Support
2. Openness
3. Scalability
4. Security
5. Failure Tolerance
6. Concurrency
7. Transparency


Task 1.2: Abstraction Levels

Physical Configuration
Logical Configuration
Process Network
Distributed Algorithm


Task 1.3: System Models

Client-Server, Client and Server play different roles during the communication, Client is active and will request a service at any time, Server is passive and could only response the request and provide the service, Server has to be always running to ensure the service could be provided at any time.

Peer-to-Peer, Everyone play the same role during the communication, Everyone could actively request a service and(or) passively response to the request. If someone stop to provide its service, all others could still work well.


Task 1.4: Programming Abstractions

Distributed operating system
Distributed database
Protocol
Distributed Programming


Task 1.5: Distributed Programing Language Approach

